services:
  # ArLocal - Local Arweave development node
  arlocal:
    image: textury/arlocal:latest
    platform: linux/amd64
    container_name: RATi-arlocal
    # Port 1984 is internal only - access via deployment service proxy
    environment:
      - ARLOCAL_PROTOCOL=http
      - ARLOCAL_HOST=0.0.0.0
      - ARLOCAL_PORT=1984
    volumes:
      - arlocal_data:/app/data
    networks:
      - RATi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1984/info"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: RATi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - RATi-network
    command: redis-server --appendonly yes

  # PostgreSQL for application data (optional)
  postgres:
    image: postgres:15-alpine
    container_name: RATi-postgres
    environment:
      POSTGRES_DB: RATi
      POSTGRES_USER: RATi
      POSTGRES_PASSWORD: RATi_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - RATi-network

  # Deployment Management Service
  deployment-service:
    build:
      context: ./deployment-service
      dockerfile: Dockerfile
    container_name: RATi-deployment-service
    ports:
      - "3032:3032"
    volumes:
      - ./wallets:/app/wallets:ro
      - ./scrolls:/app/scrolls:ro
      - ./src:/app/src:ro
      - ./agent:/app/agent:ro
      - deployment_data:/app/data
    depends_on:
      - arlocal
    networks:
      - RATi-network
    environment:
      - NODE_ENV=development
      - ARWEAVE_HOST=arlocal
      - ARWEAVE_PORT=1984
      - ARWEAVE_PROTOCOL=http
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    container_name: RATi-frontend
    ports:
      - "3030:80"
    depends_on:
      - arlocal
      - deployment-service
    networks:
      - RATi-network
    environment:
      - VITE_ARWEAVE_HOST=arlocal
      - VITE_ARWEAVE_PORT=1984
      - VITE_ARWEAVE_PROTOCOL=http
      - VITE_DEPLOYMENT_SERVICE_HOST=deployment-service
      - VITE_DEPLOYMENT_SERVICE_PORT=3032

  # Browser Launcher - Automatically opens the chat interface
  browser-launcher:
    image: alpine:latest
    container_name: RATi-browser-launcher
    depends_on:
      - frontend
    networks:
      - RATi-network
    volumes:
      - ./browser-launcher.sh:/app/browser-launcher.sh:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: >
      sh -c "
        apk add --no-cache curl &&
        chmod +x /app/browser-launcher.sh &&
        /app/browser-launcher.sh
      "
    restart: "no"

  # AI Agent - Digital Avatar Participant
  ai-agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    container_name: RATi-ai-agent
    env_file:
      - ./agent/.env
    depends_on:
      - arlocal
    networks:
      - RATi-network
    restart: unless-stopped
    volumes:
      - ./agent/logs:/usr/src/app/logs
    environment:
      - NODE_ENV=production

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: RATi-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - RATi-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # CLI Service for running deployment commands inside the Docker network
  rati-cli:
    build:
      context: .
      dockerfile: Dockerfile.cli
    container_name: RATi-cli
    volumes:
      - ./agent:/app/agent
      - ./scripts:/app/scripts
      - ./src:/app/src
      - ./wallets:/app/wallets
      - ./scrolls:/app/scrolls
    networks:
      - RATi-network
    environment:
      - ARWEAVE_HOST=arlocal
      - ARWEAVE_PORT=1984
      - ARWEAVE_PROTOCOL=http
    depends_on:
      - arlocal
    profiles:
      - cli

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: RATi-grafana
    ports:
      - "3031:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    networks:
      - RATi-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  arlocal_data:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:
  deployment_data:

networks:
  RATi-network:
    driver: bridge
