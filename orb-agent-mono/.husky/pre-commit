#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

echo "üîç Running pre-commit security checks..."

# Run secret scanning
echo "Scanning for secrets..."
node scripts/scan-secrets.js
SECRET_SCAN_EXIT=$?

# Run basic security checks
echo "Running system security checks..."
./check-system.sh
SYSTEM_CHECK_EXIT=$?

# Run linting
echo "Running linter..."
pnpm lint:fix
LINT_EXIT=$?

# Check for any .env files that might have been accidentally added
echo "Checking for .env files..."
if git diff --cached --name-only | grep -E '\.env($|\.)' | grep -v '\.env\.example'; then
    echo "‚ùå Error: .env files should not be committed!"
    echo "Found:"
    git diff --cached --name-only | grep -E '\.env($|\.)'
    echo "Please remove them from the commit and add to .gitignore"
    exit 1
fi

# Check for potential private keys in staged files
echo "Scanning staged files for private keys..."
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|ts|json|env|yml|yaml)$')
if [ -n "$STAGED_FILES" ]; then
    echo "$STAGED_FILES" | while read file; do
        if git show ":$file" | grep -iE "(private.*key|secret.*key|api.*key)" | grep -v "example" | grep -v "test" >/dev/null; then
            echo "‚ùå Potential secret found in staged file: $file"
            git show ":$file" | grep -iE "(private.*key|secret.*key|api.*key)" | grep -v "example" | grep -v "test"
            exit 1
        fi
    done
fi

# Exit with error if any check failed
if [ $SECRET_SCAN_EXIT -ne 0 ] || [ $SYSTEM_CHECK_EXIT -ne 0 ] || [ $LINT_EXIT -ne 0 ]; then
    echo "‚ùå Pre-commit checks failed!"
    exit 1
fi

echo "‚úÖ All pre-commit checks passed!"
